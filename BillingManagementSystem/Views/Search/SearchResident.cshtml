@{
    ViewBag.Title = "Search Resident";
}
@section Styles
{
    @Styles.Render("~/plugins/select2")
    @Styles.Render("~/plugins/datepicker")
    @Styles.Render("~/plugins/datatable")
    @Styles.Render("~/plugins/sweetAlert")
}
@section Scripts
{
    @Scripts.Render("~/bundles/select2")
    @Scripts.Render("~/bundles/datatable")
    @Scripts.Render("~/bundles/datepicker")
    @Scripts.Render("~/bundles/sweetAlert")

    <script>
        var Dtable2 = null;
        var Dtable = null;
        $(document).on('nifty.ready', function () {
            $(".monthPicker").datepicker({
                format: "mm-yyyy",
                startView: "months",
                minViewMode: "months"
            });
            $(".datepick").datepicker({
                format: "dd-mm-yyyy"
            });
            
            $(document).on('click', '.viewResident', function () {
                var rowData = Dtable.row($(this).parents('tr')).data();
                var _id = rowData.residentId;

                var url = "/Search/ResidentProfile";
                url += "/" + _id;
                window.open(url, "_blank");
            });
            initResidentGrid();
            initResidentGridActions();
            initfilters();
        });
    </script>
    <script>
         function initResidentGrid() {
            Dtable = $(".residentGrid").DataTable({
                scrollX: true,
                destroy: true,
                "ajax": {
                    "url": '/Management/GetAllResidentsDetailInfo',
                    "type": 'POST',
                    "dataSrc": function (data) {
                        
                        if (data.length > 0) {
                            if (data[0].resultCode == '1100') {
                                return data;
                            }
                            else {

                                return [];
                            }
                        }
                        else {
                            return [];
                        }
                        },
                        "error": function (a, b, c) {
                            swal({
                                title: "Error",
                                text: a.status + ": " + c,
                                type: "error"
                            });
                        }
                    
                },
                
                 "columns": [

                     {
                         title: 'Action',
                         render: function (data, type, row, meta) {
                             return "<div class='btn-group'><a href='#' class='btn btn-sm btn-success viewResident'><i class='psi-eye icon-2x'></i></a></div>";
                         }
                     },
                     {
                         title: 'Sr. #',
                         render: function (data, type, row, meta) {
                             return meta.row + meta.settings._iDisplayStart + 1;
                         }
                     },
                     { "title": "Id", "data": "residentId", className: "hidden" },
                     { "title": "PaNumber", "data": "residentPaNumber" },
                     { "title": "Rank", "data": "residentRank" },
                     { "title": "Name", "data": "residentName" },
                     { "title": "Unit", "data": "residentUnit" },
                     { "title": "Remarks", "data": "residentRemarks" },
                     { "title": "Totat Out Standings", "data": "totatOutStandings" },
                     { "title": "Out Standing", "data": "outstanding" },
                     { "title": "Meter #", "data": "meterNo" },
                     { "title": "Previous Reading", "data": "previousReading" },



                 ]
             
               
            });
            Dtable.columns.adjust();
            $("div.tableTop").addClass("pull-left");
            $("div.tableBottom").addClass("pull-left");
            $("div.html5Buttons").addClass("pull-right");
        }
        function initResidentGridActions() {
            
            $(document).on('click', '.btn_resident_delete', function (e) {
                e.preventDefault();
                var rowData = Dtable.row($(this).parents('tr')).data();
                var _id = rowData.residentId;
                console.log(_id);
                if (_id) {
                    swal({
                        title: "Are you sure?",
                        text: "Your will not be able to recover this resident record!",
                        type: "warning",
                        showCancelButton: true,
                        confirmButtonClass: "btn-danger",
                        confirmButtonText: "Delete",
                        closeOnConfirm: false
                    },
                        function () {
                            $.ajax({
                                url: '/Management/DeleteResident',
                                type: 'POST',
                                data: { residentId: _id },
                                beforeSend: function () {
                                    $('.loading').show();
                                },
                                complete: function () {
                                    $('.loading').hide();
                                },
                                success: function (response) {
                                    if (response.resultCode == '1100') {
                                        swal("Deleted!", response.remarks, "success");
                                        initResidentGrid();
                                    }
                                    else {
                                        swal('Warning', response.remarks, 'warning');
                                    }
                                },
                                error: function (a, b, c) {
                                    swal('Error', a + b + c, 'error');
                                }
                            });

                        });
                }
                else {
                    swal("Warning", "Please select a Resident", "warning");
                }
            });
            
        }
        function initfilters() {
            

            $('#btn_search_paNo').click(function () {
                var paNo = $('#paNo').val();
                if (paNo == "") {
                    filterResidentPaNoGrid("/Management/GetAllResidents", null);
                    swal("Filterion Completed", "", "success");
                }
                else {
                    filterResidentPaNoGrid("/Management/GetAllResidentsForSearchByPaNo", paNo);
                    swal("Filterion Completed", "", "success");
                }
            });
            $('#btn_search_area').click(function () {
                var area = $('#area').val();
                if (area == "") {
                    filterResidentAreaGrid("/Management/GetAllResidents", null);
                    swal("Filterion Completed", "", "success");
                }
                else {
                    filterResidentAreaGrid("/Management/GetAllResidentsForSearchByPaNo", area);
                    swal("Filterion Completed", "", "success");
                }
            });
             $('#btn_search_unit').click(function () {
                var unit = $('#unit').val();
                if (unit == "") {
                    filterResidentUnitGrid("/Management/GetAllResidents", null);
                    swal("Filterion Completed", "", "success");
                }
                else {
                    filterResidentUnitGrid("/Management/GetAllResidentsForSearchByPaNo", unit);
                    swal("Filterion Completed", "", "success");
                }
             });
             $('#btn_search_rank').click(function () {
                var rank = $('#rank').val();
                if (rank == "") {
                    filterResidentRankGrid("/Management/GetAllResidents", null);
                    swal("Filterion Completed", "", "success");
                }
                else {
                    filterResidentRankGrid("/Management/GetAllResidentsForSearchByPaNo", rank);
                    swal("Filterion Completed", "", "success");
                }
            });

        }
        function filterResidentPaNoGrid(url, id) {
            Dtable = $(".residentGrid").DataTable({
                scrollX: true,
                destroy: true,
                "ajax": {
                    "url": url,
                    "type": 'POST',
                    "data":
                    {
                        residentPaNumber: id
                    },
                    "dataSrc": function (data) {
                       
                        if (data.length > 0) {
                            if (data[0].resultCode == '1100') {
                                return data;
                            }
                            }
                            else {

                                return [];
                            }
                        
                        },
                        "error": function (a, b, c) {
                            swal({
                                title: "Error",
                                text: a.status + ": " + c,
                                type: "error"
                            });
                        }
                    
                    },
                    "columns": [
                        {
                            title: 'Action',
                            render: function (data, type, row, meta) {
                                return "<div class='btn-group'><a href='#' class='btn btn-sm btn-success viewResident'><i class='psi-eye icon-2x'></i></a></div>";
                            }
                        },
                        {
                            title: 'Sr. #',
                            render: function (data, type, row, meta) {
                                return meta.row + meta.settings._iDisplayStart + 1;
                            }
                        },
                        { "title": "Id", "data": "residentId", className: "hidden" },
                        { "title": "PaNumber", "data": "residentPaNumber" },
                        { "title": "Rank", "data": "residentRank" },
                        { "title": "Name", "data": "residentName" },
                        { "title": "Unit", "data": "residentUnit" },
                        { "title": "Remarks", "data": "residentRemarks" },
                        { "title": "Totat Out Standings", "data": "totatOutStandings" },
                        { "title": "Out Standing", "data": "outstanding" },
                        { "title": "Meter #", "data": "meterNo" },
                        { "title": "Previous Reading", "data": "previousReading" },



                    ]
               
            });
            Dtable.columns.adjust();
            $("div.tableTop").addClass("pull-left");
            $("div.tableBottom").addClass("pull-left");
            $("div.html5Buttons").addClass("pull-right");
        }
        function filterResidentAreaGrid(url, id) {
            Dtable = $(".residentGrid").DataTable({
                scrollX: true,
                destroy: true,
                "ajax": {
                    "url": url,
                    "type": 'POST',
                    "data":
                    {
                        residentPaNumber: id
                    },
                    "dataSrc": function (data) {
                       
                        if (data.length > 0) {
                            if (data[0].resultCode == '1100') {
                                return data;
                            }
                            }
                            else {

                                return [];
                            }
                        
                        },
                        "error": function (a, b, c) {
                            swal({
                                title: "Error",
                                text: a.status + ": " + c,
                                type: "error"
                            });
                        }
                    
                    },
                    "columns": [
                        {
                            title: 'Action',
                            render: function (data, type, row, meta) {
                                return "<div class='btn-group'><a href='#' class='btn btn-sm btn-success viewResident'><i class='psi-eye icon-2x'></i></a></div>";
                            }
                        },
                        {
                            title: 'Sr. #',
                            render: function (data, type, row, meta) {
                                return meta.row + meta.settings._iDisplayStart + 1;
                            }
                        },
                        { "title": "Id", "data": "residentId", className: "hidden" },
                        { "title": "PaNumber", "data": "residentPaNumber" },
                        { "title": "Rank", "data": "residentRank" },
                        { "title": "Name", "data": "residentName" },
                        { "title": "Unit", "data": "residentUnit" },
                        { "title": "Remarks", "data": "residentRemarks" },
                        { "title": "Totat Out Standings", "data": "totatOutStandings" },
                        { "title": "Out Standing", "data": "outstanding" },
                        { "title": "Meter #", "data": "meterNo" },
                        { "title": "Previous Reading", "data": "previousReading" },



                    ]
               
            });
            Dtable.columns.adjust();
            $("div.tableTop").addClass("pull-left");
            $("div.tableBottom").addClass("pull-left");
            $("div.html5Buttons").addClass("pull-right");
        }
        function filterResidentUnitGrid(url, id) {
            Dtable = $(".residentGrid").DataTable({
                scrollX: true,
                destroy: true,
                "ajax": {
                    "url": url,
                    "type": 'POST',
                    "data":
                    {
                        residentUnit: id
                    },
                    "dataSrc": function (data) {
                       
                        if (data.length > 0) {
                            if (data[0].resultCode == '1100') {
                                return data;
                            }
                            }
                            else {

                                return [];
                            }
                        
                        },
                        "error": function (a, b, c) {
                            swal({
                                title: "Error",
                                text: a.status + ": " + c,
                                type: "error"
                            });
                        }
                    
                    },
                    "columns": [
                        {
                            title: 'Action',
                            render: function (data, type, row, meta) {
                                return "<div class='btn-group'><a href='#' class='btn btn-sm btn-success viewResident'><i class='psi-eye icon-2x'></i></a></div>";
                            }
                        },
                        {
                            title: 'Sr. #',
                            render: function (data, type, row, meta) {
                                return meta.row + meta.settings._iDisplayStart + 1;
                            }
                        },
                        { "title": "Id", "data": "residentId", className: "hidden" },
                        { "title": "PaNumber", "data": "residentPaNumber" },
                        { "title": "Rank", "data": "residentRank" },
                        { "title": "Name", "data": "residentName" },
                        { "title": "Unit", "data": "residentUnit" },
                        { "title": "Remarks", "data": "residentRemarks" },
                        { "title": "Totat Out Standings", "data": "totatOutStandings" },
                        { "title": "Out Standing", "data": "outstanding" },
                        { "title": "Meter #", "data": "meterNo" },
                        { "title": "Previous Reading", "data": "previousReading" },



                    ]
               
            });
            Dtable.columns.adjust();
            $("div.tableTop").addClass("pull-left");
            $("div.tableBottom").addClass("pull-left");
            $("div.html5Buttons").addClass("pull-right");
        }
        function filterResidentRankGrid(url, id) {
            Dtable2 = $(".residentGrid").DataTable({
                scrollX: true,
                destroy: true,
                "ajax": {
                    "url": url,
                    "type": 'POST',
                    "data":
                    {
                        residentRank: id
                    },
                    "dataSrc": function (data) {
                       
                        if (data.length > 0) {
                            if (data[0].resultCode == '1100') {
                                return data;
                            }
                            }
                            else {

                                return [];
                            }
                        
                        },
                        "error": function (a, b, c) {
                            swal({
                                title: "Error",
                                text: a.status + ": " + c,
                                type: "error"
                            });
                        }
                    
                    },
                    "columns": [
                        {
                            title: 'Action',
                            render: function (data, type, row, meta) {
                                return "<div class='btn-group'><a href='#' class='btn btn-sm btn-success viewResident'><i class='psi-eye icon-2x'></i></a></div>";
                            }
                        },
                        {
                            title: 'Sr. #',
                            render: function (data, type, row, meta) {
                                return meta.row + meta.settings._iDisplayStart + 1;
                            }
                        },
                        { "title": "Id", "data": "residentId", className: "hidden" },
                        { "title": "PaNumber", "data": "residentPaNumber" },
                        { "title": "Rank", "data": "residentRank" },
                        { "title": "Name", "data": "residentName" },
                        { "title": "Unit", "data": "residentUnit" },
                        { "title": "Remarks", "data": "residentRemarks" },
                        { "title": "Totat Out Standings", "data": "totatOutStandings" },
                        { "title": "Out Standing", "data": "outstanding" },
                        { "title": "Meter #", "data": "meterNo" },
                        { "title": "Previous Reading", "data": "previousReading" },



                    ]
               
            });
            Dtable2.columns.adjust();
            $("div.tableTop").addClass("pull-left");
            $("div.tableBottom").addClass("pull-left");
            $("div.html5Buttons").addClass("pull-right");
        }
    </script>

}
<div id="page-head">
    <div class="pad-all text-center">
        <h2>Search Residents</h2>
    </div>
</div>
<div id="page-content">
    <div class="row">
        <div class="col-md-12">
            <div class="panel panel-bordered-dark panel-colorful">
                <div class="panel-head">
                    <h1 class="panel-title">Search Filters</h1>
                </div>
                <div class="panel-body">
                    <div class="col-md-3">
                        <div class="form-group">
                            <label class="control-label">Search By Meter#</label>
                            <div class="input-group">
                                <input type="text" value="" placeholder="Select Meter#" class="form-control" id="meterNo" />
                                <span id="btn_search_meterNo" class="input-group-addon btn btn-info"><i class="psi-magnifi-glass"></i></span>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label">Search By Last Payment Date</label>
                            <div class="input-group">
                                <input type="text" value="" placeholder="Select Date" class="form-control datepick" />
                                <span class="input-group-addon btn btn-info"><i class="psi-magnifi-glass"></i></span>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label">Search By Last Payment Amount</label>
                            <div class="input-group">
                                <input type="text" value="" placeholder="Enter Amount" class="form-control " />
                                <span class="input-group-addon btn btn-info"><i class="psi-magnifi-glass"></i></span>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label class="control-label">Search By Area</label>
                            <div class="input-group">
                                <input type="text" value="" placeholder="Select Area" class="form-control" id="area"/>
                                <span class="input-group-addon btn btn-info" id="btn_search_area"><i class="psi-magnifi-glass"></i></span>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label">Search By Resident</label>
                            <div class="input-group">
                                <input type="text" value="" placeholder="Select Resident" class="form-control" />
                                <span class="input-group-addon btn btn-info"><i class="psi-magnifi-glass"></i></span>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label">Search By Name</label>
                            <div class="input-group">
                                <input type="text" value="" placeholder="Enter Name" class="form-control" />
                                <span class="input-group-addon btn btn-info"><i class="psi-magnifi-glass"></i></span>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label class="control-label">Search By PANo</label>
                            <div class="input-group">
                                <input type="text" value="" placeholder="Enter PA No" class="form-control " id="paNo"/>
                                <span id="btn_search_paNo" class="input-group-addon btn btn-info"><i class="psi-magnifi-glass"></i></span>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label">Search By Unit/Fmn</label>
                            <div class="input-group">
                                <input type="text" value="" placeholder="Select Unit/Fmn" class="form-control " id="unit"/>
                                <span class="input-group-addon btn btn-info" id="btn_search_unit"><i class="psi-magnifi-glass"></i></span>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label">Search By Rank</label>
                            <div class="input-group">
                                <input type="text" value="" placeholder="Select Rank" class="form-control " id="rank"/>
                                <span class="input-group-addon btn btn-info" id="btn_search_rank"><i class="psi-magnifi-glass"></i></span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="panel panel-bordered-info panel-colorful">
                <div class="panel-head">
                    <h1 class="panel-title">List of Residents</h1>
                    <div class="col-md-3 pull-right">
                        <div class="form-group">
                            <div class="input-group">
                                <input type="text" value="" placeholder="Select Month" class="form-control monthPicker" />
                                <span class="input-group-addon btn btn-info"><i class="psi-magnifi-glass"></i></span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="panel-body">
                    <table class="table table-bordered table-striped table-hover residentGrid"></table>

                </div>
            </div>
        </div>
    </div>


</div>