
    ViewBag.Title = "Users";
}

@section Styles
{
    @Styles.Render("~/plugins/select2")
    @Styles.Render("~/plugins/datepicker")
    @Styles.Render("~/plugins/datatable")
    @Styles.Render("~/plugins/sweetAlert")
<style>
    .modal-xl {
            width: 90%;
        }

        .modal-open .select2-dropdown {
            z-index: 10060;
        }

        .modal-open .select2-close-mask {
            z-index: 10055;
        }

        .select2-container {
            width: 100% !important;
            padding: 0;
        }
    </style>
}
@section Scripts
{
    @Scripts.Render("~/bundles/select2")
    @Scripts.Render("~/bundles/datatable")
    @Scripts.Render("~/bundles/datepicker")
    @Scripts.Render("~/bundles/sweetAlert")


    <script>
        var Dtable = null, Dtable2 = null, Dtable3 = null;
        var _id = null;
        $(document).on('nifty.ready', function () {
            $('.dropdownlist').select2();
            $('#btn_user_update').hide();
            $('editTitle').hide();
            initUserGrid();
            initUserGridActions();
            initDropDowns();
           $('#btn_add_area').click(function (e) {
                e.preventDefault();
                _id = $('#user_id').val();
                var subarea = $('#user_subarea').val();
                
                AddSubArea(_id,subarea);

           });

             $('#btn_add_per').click(function (e) {
                e.preventDefault();
                _id = $('#user_id').val();
                var action = $('#user_action').val();
                
                AddPermission(_id,action);

           });

            $(document).on('click', '.btn_subarea_remove', function (e) {
                e.preventDefault();
                var rowData = Dtable2.row($(this).parents('tr')).data();
                var _Id = rowData.userAreasId;
                swal({
                    title: "Are you sure?",
                    text: "Your will not be able to recover this SubArea!",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonClass: "btn-danger",
                    confirmButtonText: "Delete",
                    closeOnConfirm: false
                },
                    function () {
                        RemoveSubarea(_Id);
                    });
            });

            $(document).on('click', '.btn_permission_remove', function (e) {
                e.preventDefault();
                var rowData = Dtable3.row($(this).parents('tr')).data();
                var _Id = rowData.userpermissions_id;
                swal({
                    title: "Are you sure?",
                    text: "Your will not be able to recover this Permission!",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonClass: "btn-danger",
                    confirmButtonText: "Delete",
                    closeOnConfirm: false
                },
                    function () {
                        RemovePremission(_Id);
                    });
            });


        });

    </script>
    <script>
        function clearFields() {
            $('#user_id').val('');
            $("#user_name").val('');
            $("#user_password").val('');
            $("#user_username").val('');
            $("#user_status").val('');
            $("#user_type").val('');
        }

        function initUserGrid() {
            Dtable = $(".userGrid").DataTable({
                autoWidth: true,
                destroy: true,
                "ajax": {
                    "url": '/Management/GetAllUsers',
                    "type": 'POST',
                    "dataSrc": function (data) {

                       if (data.length > 0) {
                            if (data[0].resultCode == '1100') {
                                return data;
                            }
                            {
                                return [];
                            }
                        }
                        else {

                            
                        }
                    },
                    "error": function (a, b, c) {
                        swal({
                            title: "Error",
                            text: a.status + ": " + c,
                            type: "error"
                        });
                    }
                },
                "columns": [
                    {
                        title: 'Action',
                        render: function (data, type, row, meta) {
                            return "<div class='btn-group'><a href='#' class='btn-sm btn-info btn_user_edit'><i class='fa fa-edit'></i></a><a href='#' class='btn-sm btn-danger btn_user_delete'><i class='fa fa-trash'></i></a><a href='#' class='btn-sm btn-info btn_user_area'><i class='fa fa-edit'></i></a></div>";
                        }
                    },
                    {
                        title: 'Sr. #',
                        render: function (data, type, row, meta) {
                            return meta.row + meta.settings._iDisplayStart + 1;
                        }
                    },
                    { "title": "Id", "data": "usersId", className: "hidden" },
                    { "title": "UserTypeId", "data": "fk_userType", className: "hidden" },
                    { "title": "UserName", "data": "usersUsername" },
                    { "title": "FullName", "data": "usersFullName" },
                    { "title": "Password", "data": "usersPassword" },
                    { "title": "UserType", "data": "userTypeName" }

                ]
            });
            Dtable.columns.adjust();
            $("div.tableTop").addClass("pull-left");
            $("div.tableBottom").addClass("pull-left");
            $("div.html5Buttons").addClass("pull-right");
        }

        function initUserGridActions() {
            $(document).on('click', '.btn_user_edit', function (e) {
                e.preventDefault();
                $('#btn_user_update').show();
                $('#btn_user_add').hide();
                $('#addTitle').hide();
                $('#editTitle').show();
                var rowData = Dtable.row($(this).parents('tr')).data();
                var _id = rowData.usersId;
                console.log(_id);
                $('#user_id').val(_id);
                $("#user_name").val(rowData.usersFullName);
                $("#user_password").val(rowData.usersPassword);
                $("#user_username").val(rowData.usersUsername);
                $("#user_status").val(rowData.usersIsActive).trigger('change');
                $("#user_type").val(rowData.fk_userType).trigger('change');
            });
            $(document).on('click', '.btn_user_delete', function (e) {
                e.preventDefault();
                var rowData = Dtable.row($(this).parents('tr')).data();
                var _id = rowData.usersId;
                if (_id) {
                    swal({
                        title: "Are you sure?",
                        text: "Your will not be able to recover this user record!",
                        type: "warning",
                        showCancelButton: true,
                        confirmButtonClass: "btn-danger",
                        confirmButtonText: "Delete",
                        closeOnConfirm: false
                    },
                        function () {
                            $.ajax({
                                url: '/Management/DeleteUser',
                                type: 'POST',
                                data: { usersId: _id },
                                beforeSend: function () {
                                    $('.loading').show();
                                },
                                complete: function () {
                                    $('.loading').hide();
                                },
                                success: function (response) {
                                    if (response.resultCode == '1100') {
                                        swal("Deleted!", response.remarks, "success");
                                        initUserGrid();
                                    }
                                    else {
                                        swal('Warning', response.remarks, 'warning');
                                    }
                                },
                                error: function (a, b, c) {
                                    swal('Error', a + b + c, 'error');
                                }
                            });

                        });
                }
                else {
                    swal("Warning", "Please select a user", "warning");
                }
            });
            $('#btn_user_add').click(function () {
                var url = "/Management/AddUser";
                var _userType = $("#user_type").val();
                var _userIsActive = $("#user_status").val();
                var _userName = $("#user_name").val();
                var _userPassword = $("#user_password").val();
                var _userUserName = $("#user_username").val();
                console.log(_userIsActive);
                $.post(url, { fk_userType: _userType, usersIsActive: _userIsActive, usersFullName: _userName, usersPassword: _userPassword, usersUsername: _userUserName }, function (data) {
                    if (data.resultCode == "1100") {
                        swal("Added!", data.remarks, "success");
                        initUserGrid();
                        clearFields();
                    }
                    else {
                        $('.loading').hide();
                        swal("Not Added", data.remarks, "error");
                    }
                });
            });
            $(document).on('click', '#btn_user_update', function (e) {
                e.preventDefault();
                var _userId = $('#user_id').val();
                if (_userId) {
                    var _userType = $("#user_type").val();
                    var _userIsActive = $("#user_status").val();
                    var _userName = $("#user_name").val();
                    var _userPassword = $("#user_password").val();
                    var _userUserName = $("#user_username").val();
                    $.ajax({
                        url: '/Management/EditUser',
                        type: 'POST',
                        data: {
                            usersId: _userId,
                            fk_userType: _userType,
                            usersIsActive: _userIsActive,
                            usersFullName: _userName,
                            usersPassword: _userPassword,
                            usersUsername: _userUserName
                        },
                        beforeSend: function () {
                            $('.loading').show();
                        },
                        complete: function () {
                            $('.loading').hide();
                        },
                        success: function (response) {
                            if (response.resultCode == '1100') {
                                swal("Updated!", response.remarks, "success");
                                initUserGrid();
                                $('#btn_user_update').hide();
                                $('#btn_user_add').show();
                                $('#addTitle').show();
                                $('#editTitle').hide();
                                clearFields();
                            }
                            else {
                                swal('Warning', response.remarks, 'warning');
                            }
                        },
                        error: function (a, b, c) {
                            swal('Error', a + b + c, 'error');
                        }
                    });

                }
                else {
                    swal("Warning", "Please select a user", "warning");
                }
            });

             
            $(document).on('click', '.btn_user_area', function (e) {
                e.preventDefault();
                 var rowData = Dtable.row($(this).parents('tr')).data();
                var _id = rowData.usersId;
                console.log(_id);
                 $('#user_id').val(_id);
                $('#area-modal').modal('show').on("shown.bs.modal", function () {
                    fetchSubAraeGrid(_id);
                    fetchPermissionGrid(_id);
                    initDropDownsArea();
                    initDropDownsPermission();
                });

            });
        }

        function fetchSubAraeGrid(_id) {
            Dtable2 = $(".subareaGrid").DataTable({
                scrollX: true,
                destroy: true,
                "ajax": {
                    "url": '/Management/GetAssignedSubAreasByUser',
                    "type": 'POST',
                    "data": { fk_user: _id },
                    "dataSrc": function (data) {
                        if (data.length > 0) {
                            if (data[0].resultCode == '1100') {
                                return data;
                            }
                            else {
                                return [];
                            }
                        }
                        else {

                            return [];
                        }
                    },
                    "error": function (a, b, c) {
                        swal({
                            title: "Error",
                            text: a.status + ": " + c,
                            type: "error"
                        });
                    }
                },
                "columns": [
                    {
                        title: 'Action',
                        render: function (data, type, row, meta) {
                            return "<a href='#' class='btn btn-sm btn-danger btn_subarea_remove'>Remove</a>";
                        }
                    },
                    {
                        title: 'Sr. #',
                        render: function (data, type, row, meta) {
                            return meta.row + meta.settings._iDisplayStart + 1;
                        }
                    },
                    { "title": "Id", "data": "userAreasId", className: "hidden" },
                    { "title": "fk_user", "data": "fk_user", className: "hidden" },
                    { "title": "fk_subarea", "data": "fk_subarea", className: "hidden" },
                    { "title": "User Name", "data": "userUserName" },
                    { "title": "SubArea", "data": "subAreaName" },
                    

                ]
            });
            Dtable2.columns.adjust();
            $("div.tableTop").addClass("pull-left");
            $("div.tableBottom").addClass("pull-left");
            $("div.html5Buttons").addClass("pull-right");
        }

        function fetchPermissionGrid(_id) {
            Dtable3 = $(".permissionGrid").DataTable({
                scrollX: true,
                destroy: true,
                "ajax": {
                    "url": '/Management/GetPermissionsByUser',
                    "type": 'POST',
                    "data": { fk_user: _id },
                    "dataSrc": function (data) {
                        if (data.length > 0) {
                            if (data[0].resultCode == '1100') {
                                return data;
                            }
                            else {
                                return [];
                            }
                        }
                        else {

                            return [];
                        }
                    },
                    "error": function (a, b, c) {
                        swal({
                            title: "Error",
                            text: a.status + ": " + c,
                            type: "error"
                        });
                    }
                },
                "columns": [
                    {
                        title: 'Action',
                        render: function (data, type, row, meta) {
                            return "<a href='#' class='btn btn-sm btn-danger btn_permission_remove'>Remove</a>";
                        }
                    },
                    {
                        title: 'Sr. #',
                        render: function (data, type, row, meta) {
                            return meta.row + meta.settings._iDisplayStart + 1;
                        }
                    },
                    { "title": "Id", "data": "userpermissions_id", className: "hidden" },
                    { "title": "fk_user", "data": "fk_user", className: "hidden" },
                    { "title": "fk_action", "data": "fk_action", className: "hidden" },
                    { "title": "Action", "data": "userpermissions_action" },
                    { "title": "Controller", "data": "userpermissions_controller" },


                ]
            });
            Dtable3.columns.adjust();
            $("div.tableTop").addClass("pull-left");
            $("div.tableBottom").addClass("pull-left");
            $("div.html5Buttons").addClass("pull-right");
        }

        function AddSubArea(_id, _subarea) {
              $.ajax({
                url: '/Management/AssignSubAreaToUser',
                type: 'POST',
                data: { fk_subarea: _subarea, fk_user: _id },
                success: function (response) {
                    if (response) {
                        if (response.resultCode == '1100') {
                            fetchSubAraeGrid(_id);
                            swal("Success", "SubArea Assigned to User Successfully.", "success");
                        }
                        else {
                            swal("Warning", response.remarks, "warning");
                        }

                    }
                },
                error: function (a, b, c) {
                    swal('Error', a + b + c, 'error');
                }

            });
        }

        function AddPermission(_id, _action) {
              $.ajax({
                url: '/Management/AssignPermissionsToUser',
                type: 'POST',
                data: { fk_action: _action, fk_user: _id },
                success: function (response) {
                    if (response) {
                        if (response.resultCode == '1100') {
                            fetchPermissionGrid(_id);
                            swal("Success", "Permission Assigned to User Successfully.", "success");
                        }
                        else {
                            swal("Warning", response.remarks, "warning");
                        }

                    }
                },
                error: function (a, b, c) {
                    swal('Error', a + b + c, 'error');
                }

            });
        }

        function RemoveSubarea(_Id) {
            $.ajax({
                url: '/Management/RemoveSubAreaFromUser',
                type: 'POST',
                data: { userAreasId: _Id },
                success: function (response) {
                    if (response) {
                        if (response.resultCode == '1100') {
                            swal("Success", "SubArea Removed Successfully.", "success");
                            fetchSubAraeGrid(_id);
                            
                        }
                        else {
                            swal("Warning", response.remarks, "warning");
                        }
                    }
                },
                error: function (a, b, c) {
                    swal('Error', a + b + c, 'error');
                }

            });
        }

        function RemovePremission(_Id) {
            $.ajax({
                url: '/Management/RemovePermissionFromUser',
                type: 'POST',
                data: { userpermissions_id: _Id },
                success: function (response) {
                    if (response) {
                        if (response.resultCode == '1100') {
                            swal("Success", "userpermission Removed Successfully.", "success");
                            fetchPermissionGrid(_id);
                            
                        }
                        else {
                            swal("Warning", response.remarks, "warning");
                        }
                    }
                },
                error: function (a, b, c) {
                    swal('Error', a + b + c, 'error');
                }

            });
        }

        function initDropDowns() {

            $.ajax({
                url: '/Management/GetAllUserTypes',
                type: 'POST',
                success: function (response) {
                    if (response) {
                        if (response[0].resultCode == '1100') {
                            var list = [];
                            for (var i = 0; i < response.length; i++) {
                                list.push({ text: response[i].userTypeName, id: response[i].userTypeId });
                            }
                            $('#user_type').select2({ data: list }).trigger('change');
                        }
                        else {
                            swal("Warning", response[0].remarks, "warning");
                        }
                    }
                    else {
                        swal("Warning", 'No response from server', "warning");
                    }
                },
                error: function (a, b, c) {
                    swal('Error', a + b + c, 'error');
                }
            });

        }

        function initDropDownsArea() {
             $.ajax({
                url: '/Management/GetAllAreas',
                type: 'POST',
                success: function (response) {
                    if (response) {
                        if (response[0].resultCode == '1100') {
                            var list = [];
                            for (var i = 0; i < response.length; i++) {
                                list.push({ text: response[i].areaName, id: response[i].areaId });
                            }
                            $('#user_area').select2({ data: list }).trigger('change');
                        }
                        else {
                            swal("Warning", response[0].remarks, "warning");
                        }
                    }
                    else {
                        swal("Warning", 'No response from server', "warning");
                    }
                },
                error: function (a, b, c) {
                    swal('Error', a + b + c, 'error');
                }
            });
            $("#user_area").change(function () {
                var _areaId = $("#user_area").val();
                $.ajax({
                    url: '/Management/GetAllSubAreasByArea',
                    type: 'POST',
                    data: { fk_area: _areaId },
                    success: function (response) {
                        if (response) {
                            if (response[0].resultCode == '1100') {
                                var list = [];
                                for (var i = 0; i < response.length; i++) {
                                    list.push({ text: response[i].subAreaName, id: response[i].subAreaId });

                                }
                                $('#user_subarea').select2().empty();
                                $('#user_subarea').select2({ data: list }).trigger('change');
                            }
                            else {
                                $('#user_subarea').select2().empty();
                                $('#user_subarea').select2({
                                    placeholder: "subarea not found ",
                                    allowClear: true
                                }).trigger('change');
                            }
                        }
                    },
                    error: function (a, b, c) {
                        swal('Error', a + b + c, 'error');
                    }
                });
            });
        }

        function initDropDownsPermission() {
             $.ajax({
                url: '/Management/GetAllControllers',
                type: 'POST',
                success: function (response) {
                    if (response) {
                        if (response[0].resultCode == '1100') {
                            var list = [];
                            for (var i = 0; i < response.length; i++) {
                                list.push({ text: response[i].controllerName, id: response[i].controllerId });
                            }
                            $('#user_controller').select2({ data: list }).trigger('change');
                        }
                        else {
                            swal("Warning", response[0].remarks, "warning");
                        }
                    }
                    else {
                        swal("Warning", 'No response from server', "warning");
                    }
                },
                error: function (a, b, c) {
                    swal('Error', a + b + c, 'error');
                }
            });
            $("#user_controller").change(function () {
                var _controllerId = $("#user_controller").val();
                $.ajax({
                    url: '/Management/GetAllActions',
                    type: 'POST',
                    data: { fk_controller: _controllerId },
                    success: function (response) {
                        if (response) {
                            if (response[0].resultCode == '1100') {
                                var list = [];
                                for (var i = 0; i < response.length; i++) {
                                    list.push({ text: response[i].actionName, id: response[i].actionId });

                                }
                                $('#user_action').select2().empty();
                                $('#user_action').select2({ data: list }).trigger('change');
                            }
                            else {
                                $('#user_action').select2().empty();
                                $('#user_action').select2({
                                    placeholder: "action not found ",
                                    allowClear: true
                                }).trigger('change');
                            }
                        }
                    },
                    error: function (a, b, c) {
                        swal('Error', a + b + c, 'error');
                    }
                });
            });
        }
    </script>
}
<div id="page-head">
    <div class="pad-all text-center">
        <h2>Register New User</h2>
    </div>
</div>
<div id="page-content">
    <div class="row">
        <div class="col-md-12">
            <div class="panel panel-bordered-warning">
                <div class="panel-heading">
                    <h1 class="panel-title">Search Filters</h1>
                </div>
                <div class="panel-body">
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-3">
            <div class="panel panel-bordered-warning">
                <div class="panel-heading">
                    <h1 id="addTitle" class="panel-title">User Details</h1>
                    <h1 id="editTitle" class="panel-title">Edit User Details</h1>
                </div>
                <div class="panel-body ">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <div class="input-group">
                                    <span class="input-group-addon bg-primary">Full Name</span>
                                    <input type="hidden" id="user_id" value="" />
                                    <input type="text" value="" id="user_name" class="form-control" />
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="input-group">
                                    <span class="input-group-addon bg-primary">Username</span>
                                    <input type="text" value="" id="user_username" class="form-control" />
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="input-group">
                                    <span class="input-group-addon bg-primary">User Type</span>
                                    <select class="form-control dropdownlist" id="user_type">
                                    </select>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="input-group">
                                    <span class="input-group-addon bg-primary">Password</span>
                                    <input type="text" value="" id="user_password" class="form-control" />
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="input-group">
                                    <span class="input-group-addon bg-primary">User Status</span>
                                    <select class="form-control dropdownlist" id="user_status">
                                        <option id="1" value="1">Enabled</option>
                                        <option id="0" value="0">Disabled</option>
                                    </select>
                                </div>
                            </div>
                            
                            <div id="saveUpdateBtn" class="form-group">
                                <a href="#" id="btn_user_add" class="btn btn-success btn-lg btn-block">Submit</a>
                                <a href="#" id="btn_user_update" class="btn btn-success btn-lg btn-block">Update</a>
                            </div>
                            <div class="form-group">
                                <div class="alert alert-info hidden" id="errorText"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-9">
            <div class="panel panel-bordered-warning">
                <div class="panel-heading">
                    <h1 class="panel-title">User List</h1>
                </div>
                <div class="panel-body">
                    <table class="table table-bordered table-striped table-hover userGrid"></table>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="area-modal" role="dialog" aria-labelledby="arae-modal" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">

            <!--Modal header-->
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><i class="pci-cross pci-circle"></i></button>
                <h2 class="modal-title">Assign SubArea & Permission</h2>
            </div>

            <!--Modal body-->
            <div class="modal-body" id="modal-overlay">
                <div class="row">
                    <div class="col-md-3">


                        <div class="form-group">
                            <div class="input-group">
                                <span class="input-group-addon bg-primary">Arae</span>
                                <select class="form-control dropdownlist" id="user_area">
                                </select>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="input-group">
                                <span class="input-group-addon bg-primary">Sub Arae</span>
                                <select class="form-control dropdownlist" id="user_subarea">
                                </select>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="input-group">
                                <a href="#" id="btn_add_area" class="btn btn-success">add</a>

                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label class="control-label">Subaraes</label>
                            <table class="table table-bordered table-striped table-hover subareaGrid"></table>
                        </div>
                    </div>
                    <div class="col-md-3">

                        <div class="form-group">
                            <div class="input-group">
                                <span class="input-group-addon bg-primary">Controller</span>
                                <select class="form-control dropdownlist" id="user_controller">
                                </select>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="input-group">
                                <span class="input-group-addon bg-primary">Action</span>
                                <select class="form-control dropdownlist" id="user_action">
                                </select>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="input-group">
                                <a href="#" id="btn_add_per" class="btn btn-success">add</a>

                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label class="control-label">Permission</label>
                            <table class="table table-bordered table-striped table-hover permissionGrid"></table>
                        </div>
                    </div>
                </div>

            </div>
        </div>
       
        <!--Modal footer-->
        <div class="modal-footer">
            <div class="btn-group pull-right">
                <a href="#" data-dismiss="modal" class="btn btn-primary close">Close</a>
            </div>
        </div>
    </div>
    </div>

